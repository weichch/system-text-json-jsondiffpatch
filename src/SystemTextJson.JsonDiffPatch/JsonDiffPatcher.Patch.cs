using System.Text.Json.Diffs;
using System.Text.Json.Nodes;

namespace System.Text.Json
{
    static partial class JsonDiffPatcher
    {
        private const string InvalidPatchDocument = "Invalid patch document.";

        /// <summary>
        /// Applies the patch document to the JSON object.
        /// </summary>
        /// <param name="obj">The JSON object.</param>
        /// <param name="patch">The patch document previously generated by <c>Diff</c> method.</param>
        public static void Patch(ref JsonNode? obj, JsonNode? patch)
        {
            if (patch is null)
            {
                return;
            }

            var delta = new JsonDiffDelta(patch);
            var kind = delta.Kind;

            if (kind == DeltaKind.Modified)
            {
                obj = delta.GetNewValue();
                return;
            }

            if (kind == DeltaKind.Object && obj is JsonObject jsonObj)
            {
                PatchObject(jsonObj, patch.AsObject());
                return;
            }

            if (kind == DeltaKind.Array && obj is JsonArray jsonArray)
            {
                PatchArray(jsonArray, patch.AsObject());
                return;
            }

            throw new FormatException(InvalidPatchDocument);
        }
    }
}
